import telegram
from telegram.ext import Updater, MessageHandler, Filters

# Список разрешенных продуктов
ALLOWED_PRODUCTS = {
    'овощи': [
        'брокколи', 'цветная капуста', 'шпинат', 'морковь', 'бобы',
        'горох', 'брюссельская капуста', 'редис', 'лук', 'чеснок',
        'томаты', 'баклажаны', 'перец сладкий', 'кабачки', 'огурцы'
    ],
    'фрукты': [
        'яблоки', 'груши', 'апельсины', 'мандарины', 'бананы',
        'киви', 'авокадо', 'малина', 'черника', 'клубника', 'вишня',
        'ананас', 'манго', 'гранат', 'водяные дыни', 'папайя', 'черешня'
    ],
    'крупы и зерновые': [
        'гречка', 'овсянка', 'киноа', 'бурый рис',
        'цельнозерновые макароны', 'пшеничная крупа',
        'булгур', 'перловка', 'кукурузная крупа', 'амарант'
    ],
    'белковые продукты': [
        'индейка', 'курица', 'рыба', 'морепродукты', 'тофу',
        'творог нежирный', 'греческий йогурт', 'яйца'
    ],
    'бобовые и орехи': [
        'чечевица', 'нут', 'фасоль', 'миндаль', 'грецкий орех', 'кедровые орехи', 'чиа-семена', 'льняные семена'
],
'заменители сахара': [
    'стевия', 'эритрит', 'ксилит', 'маннит'
],
'масла и жиры': [
    'оливковое масло', 'рапсовое масло',
    'авокадо масло', 'кокосовое масло'
],
'напитки': [
    'вода', 'зеленый чай', 'травяные чаи', 'черный кофе'
]

]

}
Функция для проверки, можно ли употреблять продукт

def is_allowed_food(food):
for key in ALLOWED_PRODUCTS:
if food.lower() in ALLOWED_PRODUCTS[key]:
return f'{food} можно употреблять при {key}'
return f'{food} нельзя употреблять'
Функция для обработки сообщений

def handle_message(update, context):
# Получаем текст сообщения
message_text = update.message.text
# Проверяем, можно ли употреблять продукт
result = is_allowed_food(message_text)
# Отправляем ответ пользователю
context.bot.send_message(chat_id=update.effective_chat.id, text=result)
Токен для доступа к Telegram API

TOKEN = 'YOUR_TOKEN_HERE'
Создаем объект Updater и передаем ему токен

updater = Updater(TOKEN, use_context=True)
Получаем диспетчер сообщений

dispatcher = updater.dispatcher
Создаем обработчик сообщений

message_handler = MessageHandler(Filters.text, handle_message)
Регистрируем обработчик в диспетчере

dispatcher.add_handler(message_handler)
Запускаем бота

updater.start_polling()
Ждем завершения работы бота

updater.idle()
